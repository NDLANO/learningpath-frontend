notifications:
  slack:
    on_success: change
    on_failure: always
    rooms:
      secure:
        nsj9HxReGKIgNMTO3sahfZg0JCDakTJbLcieshisvsI89QlZZYuZH+gNbpwxa6OyfpcZBdnVMgGWrByMEuv6AzTFzZK7VzpRWlMDbntpKPk5LRMjp1GNIDpbalFTllM2hsrBC1yaHCwsR/0jHYgmkQrjfvzj4yOO1b6gEu7LTCJ8qA5Dho52g4gKdKv5UtskGYKoVQpc6VpWrKYCdZ6PM8D4ikoFW+UlvnixQH4yJoxDP+aUnnZkq8/NmPpoMOqEOVyVWA92FHJRGrsW/oZ3llOdZqmGnS8ySFgzrnOHaQBpImgmXh7StYMYkAGna/0EyKkOCAiiejlP7HgMxXXzVjBbLqPCMlgJOiOJP6bgp1/ZvMNI3NS51DeZtLuPaCiZBGc1Z4UGAzIuK+GnC6EL/HEyqc6o/6sdiJdXZPe8G0gP83Fwir2r1tW2XoL0BTl/lPxpxS/xJuEsVCf6/D8gSfr8yrAw53TUxLmFPFaXvhZkBWU8lUPZD6Se7gHrA6Bk6SbvKRRbwfS2f1xHN8XVFhz1TMkpckqVWBALySd0H2lY1DkQkm67Zb+Ap4OwEiEljYRMBMJncI8FmDlooDYKL8LUNwb1Nlf7X/TEzebhr0Xh11eo6mrSXdBgbXh6potuh8EhQrLgwW6M4ZlSbBJKH1QXfuTZgfrrehVE39dSqyg=
env:
  global:
    - secure:
        r63p8uNYHB4y9+SeU+CCnSshA6jIN4f19wv7RzqomW3O5x1KlgAVDancpTQmQleztbTi/6esYfp3rp20ze4MgQUcjYW9914NGnRhsM2JlZ5NHXJvrJtoZR5Bd5JbcT8vYE5RFgRQY89XlSz9mAI/4JaZ1FCvUI6njC8VAuvLPHD1NrfDCefxOBj6UqJvn9tzgcqx1iVhk362U/1cKFUgUCWdw8cJpZi7zSnC++t4EUU7+hHFwRQDtCWeHb7mBqNomezK6+6S3AcQ3AAo62jRaYHP43CBjf7TrmEjtUvJAnvn2kXwk4kneIhTzt27LaEo47uHbfmTFC5tegpM4yzEsb8YDxkV7ESEyrYI0evK71+zI/MpdGw6fy/M58K2gtPE7MDvdUe90jRFsAOv/nh7cihae5eKMIwtSecLYkS6qjQnYk3wEQrdEKiCF56TONeC3+64TwKw6uVtUawfu4ADX6/JTvECjqyx7nzym3BiJXzsxDCJkMfxlMk9CNL/2pXma2Vjifffe+CbLLCDx6jf/Xoaul7xL8/Uc3cyY1QyPaBgGo6Ckaz91PUmzbAze4H6q7U0ZaprOf/rtJBZspJUGSfc2UEZ5sT+lTAC7pqIzpqTE83sI2NTvVep8262Cbs+l1tsTIouSzsTZrY2fgXikGHw5HKuIpebL6qglheKZfo=

matrix:
  fast_finish: true
  include:
    - name: "Test"
      language: node_js
      node_js:
        - '10'
      addons:
        apt:
          packages:
            # Ubuntu 16+ does not install this dependency by default, so we need to install it ourselves
            - libgconf-2-4
      cache:
        yarn: true
        directories:
          - '~/.npm'
          - '~/.cache/Cypress/'
          - '.eslintcache'
          - node_modules
      script:
        - yarn check-all
        - yarn build
        - yarn e2e-ci
      after_success:
        - travis_wait yarn ndla-scripts now-travis

    - name: "Release"
      language: python
      if: branch = master AND type = push
      python: 3.7
      dist: bionic
      services:
        - docker
      cache: pip
      before_install:
        # Authenticate docker client to deploy aws registry
        - pip install awscli
        - $(aws ecr get-login --no-include-email --region eu-west-1)

        # Fetch deploy repo
        - git clone --depth 1 https://knowit-at-ndla:$TRAVIS_RELEASE_GITHUB_TOKEN@github.com/ndlano/deploy.git ../deploy

        # Setup env
        - export NDLA_HOME=$(realpath $(pwd)/../)
        - export NDLA_DEPLOY=$NDLA_HOME/deploy
        - export DEPLOY_VERSION=$(git -C $NDLA_DEPLOY rev-parse --short=7 HEAD)
        - export DEPLOY_DOCKER_REPO=784120951859.dkr.ecr.eu-west-1.amazonaws.com/ndla/deploy

        # Get cache, and don't fail if missing
        - docker pull $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION || true
      install:
        - eval "$($NDLA_DEPLOY/scripts/bin/ndla init -)"
      env:
        - SSH_AUTH_SOCK=/tmp/mock_sock
      script:
        - ndla release test learningpath-frontend --update-chart

      before_cache: # Save docker image as cache
        - docker push $DEPLOY_DOCKER_REPO:$DEPLOY_VERSION

  allow_failures:
      - name: "Release"
    
